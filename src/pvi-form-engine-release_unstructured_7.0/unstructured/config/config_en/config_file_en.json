{
  "chatgpt_config": {
    "use_16k_only": false,
    "use_gpt4": false,
    "use_gpt4O": true, 
    "use_finetuned": false},
  "templates_library": {
    "trial": {
      "1": "Behave like a doctor and Extract following entities from input text where entity of interest is between {} and () encloses information about entity\n\n{PRODUCTS} (list of all drugs, suspect or concomitant, consumed by patient/subject, try to select sentences which also have dose information)\n{EVENTS} (list of all adverse events to patient/subject, adverse event is a medical event experienced by patient which may or may not be due to product consumption, however symptoms are not events)\n{MEDICAL_HISTORIES} (list of all medical history related to patient/subject, medical history is a past adverse event or a past medical issue exclusive from {EVENTS} and a test should not be included in medical history)\n{DEATH_CAUSES} (list of all mentioned death causes for the death of patient/subject)\n{PARENT_MEDICAL_HISTORIES} (list of all medical histories related to parent, medical history is a past adverse event)\n{PATIENT_PAST_DRUGS} (list of all drugs that a patient/subject used to consume in the past, but exclusive from {PRODUCTS})\n{PARENT_DRUG_HISTORIES} (list of all drugs consumed by parent in the past)\n{LAB_TEST_NAMES} (list of name of all lab test related to patient/subject)\n\nNote: Do not extract any additional entity which is not asked for. \nProvide output in json format as start with $ followed by json and ends with $. ${ \"PRODUCTS\": <list of products>, \"EVENTS\": <list of events>, \"MEDICAL_HISTORIES\": <list of medical histories>, \"DEATH_CAUSES\": <list of death causes>, \"PARENT_MEDICAL_HISTORIES\": <list of parent medical histories>, \"PATIENT_PAST_DRUGS\": <list of patient past drugs>, \"PARENT_DRUG_HISTORIES\": <list of parent drug histories>, \"LAB_TEST_NAMES\": <list of lab test names> }$\n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "2": "Extract all the entities listed below in the input text. The format of the entities listed below follows entity to be extracted (any optional detail) {KEY for JSON OUTPUT} format. \npatient age (with unit) {PAT_AGE}, patient gender (male or female) {PAT_GENDER}, patient pregnancy status (True or False, if not mentioned mark as 'null') {PREGNANCY}, patient height (with unit) {PAT_HEIGHT}, patient weight (with unit) {PAT_WEIGHT}, patient age group (infant or young or old or adult or adolescent, if not mentioned mark as 'null') {PAT_AGE_GRP}, patient race or ethnicity {ETHNICITY}, patient lmp date {PAT_LMP}, mother lmp date {PARENT_LMP_DATE}, parent gender (prioritise mother if PARENT_LMP_DATE exists else any one parent) {PARENT_GENDER}, reporter occupation(occupation of reporter like physicion, doctor, chemist pharmacist, consumer, etc) {REPORTER_OCCUPATION}, reporter country (any country that is present in the text, it could be reporter's country or the country in which the case occured) {REPORTER_COUNTRY}, study number {STUDY_NUM}, study type (clinical study, clinical trial, report from study, spontaneous, literature, literature spontaneous, literature study) {STUDY_TYPE}, information source (spontaneous, report from study, interventional/non interventional trials, literature) {SOURCE_TYPE}, hospitalisation start date {HOSP_START_DATE}, hospitalisation end date {HOSP_END_DATE}, the first date or day zero when the case was reported {receiptDate}, the latest date when the case was reported {mostRecentReceiptDate}, the reference number is the subject of the text (eg. IN202104365, 20240455767, 2012-13545, 2024-Us-245465) {\"reference_case\"}.\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. Convert true and false to boolean type instead of string. If any entity is not found in the text, fill that entity value as \"null\".\n\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"ENTITIES\": [[\"PAT_AGE\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nText input is provided between $ signs\n$<narrative>$",
      "3": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n\n{PRODUCTS} = **PRODUCTS**\n{PATIENT_PAST_DRUGS} = **PATIENT_PAST_DRUGS**\n{PARENT_DRUG_HISTORIES} (list of all medical histories related to parent) = **PARENT_DRUG_HISTORIES**\n\nNow extract the given entities for each item in given {PRODUCTS} list.\n{PRODUCT_NAME} (name of product), \n{DRUG_ROLE} (drug role as suspect or concomitant) , \n{DOSE_START_DATE} (dose start date), \n{DOSE_STOP_DATE} (dose stop date), \n{DOSE} (only dose strength with unit), \n{FREQ} (drug dose frequency), \n{ROUTE} (drug dose route),\n{FORMULATION} (drug formulation), \n{BATCH_LOT_NUM} (dose batch/lot number), \n{DOSE_DURATION} (dose duration), \n{ACTION_TAKEN} (action taken with product), \n{PRODUCT_INDICATIONS} (product indication)\n\nNow extract the given entities for each item in given {PATIENT_PAST_DRUGS} list \n{PAT_PAST_DRUG} (name of past drug, exclusive from {PRODUCTS}) , \n{PAST_DRUG_START} (drug start date), \n{PAST_DRUG_STOP} (drug stop date).\n\nNow extract the given entities for each item in given {PARENT_DRUG_HISTORIES} list \n{PARENT_DRUG_HIST} (parent drug history name, exclusive of {PATIENT_PAST_DRUGS})\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nUse the 20 character context from sentences which have other product information.\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"PRODUCTS\": [[\"PRODUCT_NAME\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"PATIENT_PAST_DRUGS\": [[\"PAT_PAST_DRUG\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"PARENT_DRUG_HISTORIES\": [[\"PARENT_DRUG_HIST\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "4": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n{LAB_TEST_NAMES} = **LAB_TEST_NAMES**\n\nNow extract the given entities for each item in given {LAB_TEST_NAMES} list \n{TEST_NAME} (name of the test)\n{TEST_RESULT} (outcome/result of test conducted)\n{TEST_DATE} (test date)\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"LAB_TEST_NAMES\": [[\"TEST_NAME\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "5": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n{DEATH_CAUSES} = **DEATH_CAUSES**\n{EVENTS} = **EVENTS**\n{MEDICAL_HISTORIES} = **MEDICAL_HISTORIES**\n{PARENT_MEDICAL_HISTORIES} (list of all drugs consumed by parent) = **PARENT_MEDICAL_HISTORIES**\n\nNow extract the given entities for each item in given {EVENTS} list.\n{DESC_REPTD} (name of the adverse event, should not be a symptom), \n{EVENT_OUTCOME} (event outcome), \n{EVENT_SERIOUSNESS} (event seriousness from [hospitalization, fatal, congenital anamoly, death]),\n{EVENT_START_DATE} (event start date), \n{EVENT_END_DATE} (event end date), \n{EVENT_DURATION} (event duration)\n\nNow extract the given entities for each item in given {DEATH_CAUSES} list\n{DEATH_CAUSE} (cause of death, exclusive of {EVENTS}), \n{DEATH_DATE} (date of death), \n{AUTOPSY_DONE} (was autopsy done, True or False, if not mentioned mark as 'null')\n{AUTOPSY_RESULT} (if {AUTOPSY_DONE} is True, what was the result of autopsy)\n\nNow extract the given entities for each item in given {MEDICAL_HISTORIES} list\n{MEDICAL_HISTORY} (name of medical history, exclusive of {EVENTS})\n{MC_START_DATE} (medical history start date)\n{MC_END_DATE} (medical history end date)\n\nNow extract the given entities for each item in given {PARENT_MEDICAL_HISTORIES} list \n{PARENT_MED_HIST} (parent medical history name, exclusive of {MEDICAL_HISTORIES})\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"DEATH_CAUSES\": [[\"DEATH_CAUSE\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"EVENTS\": [[\"DESC_REPTD\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"MEDICAL_HISTORIES\": [[\"MEDICAL_HISTORY\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"PARENT_MEDICAL_HISTORIES\": [[\"PARENT_MED_HIST\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$\n"
    },
    "with_conf": {
      "1": "Behave like a doctor and Extract following entities from input text where entity of interest is between {} and () encloses information about entity\n\n{PRODUCTS} (list of all drugs, suspect or concomitant, consumed by patient/subject, try to select sentences which also have dose information)\n{EVENTS} (list of all adverse events to patient/subject, adverse event is a medical event experienced by patient which may or may not be due to product consumption, however symptoms are not events)\n{MEDICAL_HISTORIES} (list of all medical history related to patient/subject, medical history is a past adverse event or a past medical issue exclusive from {EVENTS} and a test should not be included in medical history)\n{DEATH_CAUSES} (list of all mentioned death causes for the death of patient/subject)\n{PARENT_MEDICAL_HISTORIES} (list of all medical histories related to parent, medical history is a past adverse event)\n{PATIENT_PAST_DRUGS} (list of all drugs that a patient/subject used to consume in the past, but exclusive from {PRODUCTS})\n{PARENT_DRUG_HISTORIES} (list of all drugs consumed by parent in the past)\n{LAB_TEST_NAMES} (list of name of all lab test related to patient/subject)\n\nNote: Do not extract any additional entity which is not asked for. \nProvide output in json format as start with $ followed by json and ends with $. ${ \"PRODUCTS\": <list of products>, \"EVENTS\": <list of events>, \"MEDICAL_HISTORIES\": <list of medical histories>, \"DEATH_CAUSES\": <list of death causes>, \"PARENT_MEDICAL_HISTORIES\": <list of parent medical histories>, \"PATIENT_PAST_DRUGS\": <list of patient past drugs>, \"PARENT_DRUG_HISTORIES\": <list of parent drug histories>, \"LAB_TEST_NAMES\": <list of lab test names> }$\n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "2": "Extract all the entities listed below in the input text. The format of the entities listed below follows entity to be extracted (any optional detail) {KEY for JSON OUTPUT} format. \npatient age (with unit) {PAT_AGE}, patient gender (male or female) {PAT_GENDER}, patient pregnancy status (True or False, if not mentioned mark as 'null') {PREGNANCY}, patient height (with unit) {PAT_HEIGHT}, patient weight (with unit) {PAT_WEIGHT}, patient age group (infant or young or old or adult or adolescent, if not mentioned mark as 'null') {PAT_AGE_GRP}, patient race or ethnicity {ETHNICITY}, patient lmp date {PAT_LMP}, mother lmp date {PARENT_LMP_DATE}, parent gender (prioritise mother if PARENT_LMP_DATE exists else any one parent) {PARENT_GENDER}, reporter occupation(occupation of reporter like physicion, doctor, chemist pharmacist, consumer, etc) {REPORTER_OCCUPATION}, reporter country (any country that is present in the text, it could be reporter's country or the country in which the case occured) {REPORTER_COUNTRY}, study number {STUDY_NUM}, study type (clinical study, clinical trial, report from study, spontaneous, literature, literature spontaneous, literature study) {STUDY_TYPE}, information source (spontaneous, report from study, interventional/non interventional trials, literature) {SOURCE_TYPE}, hospitalisation start date {HOSP_START_DATE}, hospitalisation end date {HOSP_END_DATE}, the first date or day zero when the case was reported {receiptDate}, the latest date when the case was reported {mostRecentReceiptDate}, the reference number is the subject of the text (eg. IN202104365, 20240455767, 2012-13545, 2024-Us-245465) {\"reference_case\"}.\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. Convert true and false to boolean type instead of string. If any entity is not found in the text, fill that entity value as \"null\".\n\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"ENTITIES\": [[\"PAT_AGE\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nText input is provided between $ signs\n$<narrative>$",
      "3": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n\n{PRODUCTS} = **PRODUCTS**\n{PATIENT_PAST_DRUGS} = **PATIENT_PAST_DRUGS**\n{PARENT_DRUG_HISTORIES} (list of all medical histories related to parent) = **PARENT_DRUG_HISTORIES**\n\nNow extract the given entities for each item in given {PRODUCTS} list.\n{PRODUCT_NAME} (name of product), \n{DRUG_ROLE} (drug role as suspect or concomitant) , \n{DOSE_START_DATE} (dose start date), \n{DOSE_STOP_DATE} (dose stop date), \n{DOSE} (only dose strength with unit), \n{FREQ} (drug dose frequency), \n{ROUTE} (drug dose route),\n{FORMULATION} (drug formulation), \n{BATCH_LOT_NUM} (dose batch/lot number), \n{DOSE_DURATION} (dose duration), \n{ACTION_TAKEN} (action taken with product), \n{PRODUCT_INDICATIONS} (product indication)\n\nNow extract the given entities for each item in given {PATIENT_PAST_DRUGS} list \n{PAT_PAST_DRUG} (name of past drug, exclusive from {PRODUCTS}) , \n{PAST_DRUG_START} (drug start date), \n{PAST_DRUG_STOP} (drug stop date).\n\nNow extract the given entities for each item in given {PARENT_DRUG_HISTORIES} list \n{PARENT_DRUG_HIST} (parent drug history name, exclusive of {PATIENT_PAST_DRUGS})\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nUse the 20 character context from sentences which have other product information.\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"PRODUCTS\": [[\"PRODUCT_NAME\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"PATIENT_PAST_DRUGS\": [[\"PAT_PAST_DRUG\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"PARENT_DRUG_HISTORIES\": [[\"PARENT_DRUG_HIST\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "4": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n{LAB_TEST_NAMES} = **LAB_TEST_NAMES**\n\nNow extract the given entities for each item in given {LAB_TEST_NAMES} list \n{TEST_NAME} (name of the test)\n{TEST_RESULT} (outcome/result of test conducted)\n{TEST_DATE} (test date)\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"LAB_TEST_NAMES\": [[\"TEST_NAME\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "5": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n{DEATH_CAUSES} = **DEATH_CAUSES**\n{EVENTS} = **EVENTS**\n{MEDICAL_HISTORIES} = **MEDICAL_HISTORIES**\n{PARENT_MEDICAL_HISTORIES} (list of all drugs consumed by parent) = **PARENT_MEDICAL_HISTORIES**\n\nNow extract the given entities for each item in given {EVENTS} list.\n{DESC_REPTD} (name of the adverse event, should not be a symptom), \n{EVENT_OUTCOME} (event outcome), \n{EVENT_SERIOUSNESS} (event seriousness from [hospitalization, fatal, congenital anamoly, death]),\n{EVENT_START_DATE} (event start date), \n{EVENT_END_DATE} (event end date), \n{EVENT_DURATION} (event duration)\n\nNow extract the given entities for each item in given {DEATH_CAUSES} list\n{DEATH_CAUSE} (cause of death, exclusive of {EVENTS}), \n{DEATH_DATE} (date of death), \n{AUTOPSY_DONE} (was autopsy done, True or False, if not mentioned mark as 'null')\n{AUTOPSY_RESULT} (if {AUTOPSY_DONE} is True, what was the result of autopsy)\n\nNow extract the given entities for each item in given {MEDICAL_HISTORIES} list\n{MEDICAL_HISTORY} (name of medical history, exclusive of {EVENTS})\n{MC_START_DATE} (medical history start date)\n{MC_END_DATE} (medical history end date)\n\nNow extract the given entities for each item in given {PARENT_MEDICAL_HISTORIES} list \n{PARENT_MED_HIST} (parent medical history name, exclusive of {MEDICAL_HISTORIES})\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nGive a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity.\nProvide output in json format as start with $ followed by json and ends with $. ${\"DEATH_CAUSES\": [[\"DEATH_CAUSE\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"EVENTS\": [[\"DESC_REPTD\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"MEDICAL_HISTORIES\": [[\"MEDICAL_HISTORY\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.], \"PARENT_MEDICAL_HISTORIES\": [[\"PARENT_MED_HIST\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\",\"<confidence score>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$\n"
    },
    "without_conf": {
      "1": "Behave like a doctor and Extract following entities from input text where entity of interest is between {} and () encloses information about entity\n\n{PRODUCTS} (list of all drugs, suspect or concomitant, consumed by patient/subject, try to select sentences which also have dose information)\n{EVENTS} (list of all adverse events to patient/subject, adverse event is a medical event experienced by patient which may or may not be due to product consumption, however symptoms are not events)\n{MEDICAL_HISTORIES} (list of all medical history related to patient/subject, medical history is a past adverse event or a past medical issue exclusive from {EVENTS} and a test should not be included in medical history)\n{DEATH_CAUSES} (list of all mentioned death causes for the death of patient/subject)\n{PARENT_MEDICAL_HISTORIES} (list of all medical histories related to parent, medical history is a past adverse event)\n{PATIENT_PAST_DRUGS} (list of all drugs that a patient/subject used to consume in the past, but exclusive from {PRODUCTS})\n{PARENT_DRUG_HISTORIES} (list of all drugs consumed by parent in the past)\n{LAB_TEST_NAMES} (list of name of all lab test related to patient/subject)\n\nNote: Do not extract any additional entity which is not asked for. \nProvide output in json format as start with $ followed by json and ends with $. ${ \"PRODUCTS\": <list of products>, \"EVENTS\": <list of events>, \"MEDICAL_HISTORIES\": <list of medical histories>, \"DEATH_CAUSES\": <list of death causes>, \"PARENT_MEDICAL_HISTORIES\": <list of parent medical histories>, \"PATIENT_PAST_DRUGS\": <list of patient past drugs>, \"PARENT_DRUG_HISTORIES\": <list of parent drug histories>, \"LAB_TEST_NAMES\": <list of lab test names> }$\n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "2": "Extract all the entities listed below in the input text. The format of the entities listed below follows entity to be extracted (any optional detail) {KEY for JSON OUTPUT} format. \npatient age (with unit) {PAT_AGE}, patient gender (male or female) {PAT_GENDER}, patient pregnancy status (True or False, if not mentioned mark as 'null') {PREGNANCY}, patient height (with unit) {PAT_HEIGHT}, patient weight (with unit) {PAT_WEIGHT}, patient age group (infant or young or old or adult or adolescent, if not mentioned mark as 'null') {PAT_AGE_GRP}, patient race or ethnicity {ETHNICITY}, patient lmp date {PAT_LMP}, mother lmp date {PARENT_LMP_DATE}, parent gender (prioritise mother if PARENT_LMP_DATE exists else any one parent) {PARENT_GENDER}, reporter occupation(occupation of reporter like physicion, doctor, chemist pharmacist, consumer, etc) {REPORTER_OCCUPATION}, reporter country (any country that is present in the text, it could be reporter's country or the country in which the case occured) {REPORTER_COUNTRY}, study number {STUDY_NUM}, study type (clinical study, clinical trial, report from study, spontaneous, literature, literature spontaneous, literature study) {STUDY_TYPE}, information source (spontaneous, report from study, interventional/non interventional trials, literature) {SOURCE_TYPE}, hospitalisation start date {HOSP_START_DATE}, hospitalisation end date {HOSP_END_DATE}, the first date or day zero when the case was reported {receiptDate}, the latest date when the case was reported {mostRecentReceiptDate}, the reference number is the subject of the text (eg. IN202104365, 20240455767, 2012-13545, 2024-Us-245465) {\"reference_case\"}.\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. Convert true and false to boolean type instead of string. If any entity is not found in the text, fill that entity value as \"null\".\n\nProvide output in json format as start with $ followed by json and ends with $. ${\"ENTITIES\": [[\"PAT_AGE\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.]}$. \n\nText input is provided between $ signs\n$<narrative>$",
      "3": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n\n{PRODUCTS} = **PRODUCTS**\n{PATIENT_PAST_DRUGS} = **PATIENT_PAST_DRUGS**\n{PARENT_DRUG_HISTORIES} (list of all medical histories related to parent) = **PARENT_DRUG_HISTORIES**\n\nNow extract the given entities for each item in given {PRODUCTS} list.\n{PRODUCT_NAME} (name of product), \n{DRUG_ROLE} (drug role as suspect or concomitant) , \n{DOSE_START_DATE} (dose start date), \n{DOSE_STOP_DATE} (dose stop date), \n{DOSE} (only dose strength with unit), \n{FREQ} (drug dose frequency), \n{ROUTE} (drug dose route),\n{FORMULATION} (drug formulation), \n{BATCH_LOT_NUM} (dose batch/lot number), \n{DOSE_DURATION} (dose duration), \n{ACTION_TAKEN} (action taken with product), \n{PRODUCT_INDICATIONS} (product indication)\n\nNow extract the given entities for each item in given {PATIENT_PAST_DRUGS} list \n{PAT_PAST_DRUG} (name of past drug, exclusive from {PRODUCTS}) , \n{PAST_DRUG_START} (drug start date), \n{PAST_DRUG_STOP} (drug stop date).\n\nNow extract the given entities for each item in given {PARENT_DRUG_HISTORIES} list \n{PARENT_DRUG_HIST} (parent drug history name, exclusive of {PATIENT_PAST_DRUGS})\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\nUse the 20 character context from sentences which have other product information.\nProvide output in json format as start with $ followed by json and ends with $. ${\"PRODUCTS\": [[\"PRODUCT_NAME\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.], \"PATIENT_PAST_DRUGS\": [[\"PAT_PAST_DRUG\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.], \"PARENT_DRUG_HISTORIES\": [[\"PARENT_DRUG_HIST\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "4": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n{LAB_TEST_NAMES} = **LAB_TEST_NAMES**\n\nNow extract the given entities for each item in given {LAB_TEST_NAMES} list \n{TEST_NAME} (name of the test)\n{TEST_RESULT} (outcome/result of test conducted)\n{TEST_DATE} (test date)\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\n\nProvide output in json format as start with $ followed by json and ends with $. ${\"LAB_TEST_NAMES\": [[\"TEST_NAME\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$",
      "5": "Consider following entities from input text where entity of interest is between {} and () encloses information about entity.\n{DEATH_CAUSES} = **DEATH_CAUSES**\n{EVENTS} = **EVENTS**\n{MEDICAL_HISTORIES} = **MEDICAL_HISTORIES**\n{PARENT_MEDICAL_HISTORIES} (list of all drugs consumed by parent) = **PARENT_MEDICAL_HISTORIES**\n\nNow extract the given entities for each item in given {EVENTS} list.\n{DESC_REPTD} (name of the adverse event, should not be a symptom), \n{EVENT_OUTCOME} (event outcome), \n{EVENT_SERIOUSNESS} (event seriousness from [hospitalization, fatal, congenital anamoly, death]),\n{EVENT_START_DATE} (event start date), \n{EVENT_END_DATE} (event end date), \n{EVENT_DURATION} (event duration)\n\nNow extract the given entities for each item in given {DEATH_CAUSES} list\n{DEATH_CAUSE} (cause of death, exclusive of {EVENTS}), \n{DEATH_DATE} (date of death), \n{AUTOPSY_DONE} (was autopsy done, True or False, if not mentioned mark as 'null')\n{AUTOPSY_RESULT} (if {AUTOPSY_DONE} is True, what was the result of autopsy)\n\nNow extract the given entities for each item in given {MEDICAL_HISTORIES} list\n{MEDICAL_HISTORY} (name of medical history, exclusive of {EVENTS})\n{MC_START_DATE} (medical history start date)\n{MC_END_DATE} (medical history end date)\n\nNow extract the given entities for each item in given {PARENT_MEDICAL_HISTORIES} list \n{PARENT_MED_HIST} (parent medical history name, exclusive of {MEDICAL_HISTORIES})\n\nNote: Do not extract any additional entity which is not asked for. Answer concisely as possible. If entity value does not exists in text use \"null\" as entity value.\n\nProvide output in json format as start with $ followed by json and ends with $. ${\"DEATH_CAUSES\": [[\"DEATH_CAUSE\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.], \"EVENTS\": [[\"DESC_REPTD\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.], \"MEDICAL_HISTORIES\": [[\"MEDICAL_HISTORY\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.], \"PARENT_MEDICAL_HISTORIES\": [[\"PARENT_MED_HIST\", \"<entity_value>\", \"<context window of 20 characters before and after entity, ensuring that the entity value is present in the context.>\"], etc.]}$. \n\nFollowing is the text input provided between $ signs\n$<narrative>$\n"
    },
    "with_conf_v2" : {
    "1": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. {PRODUCTS} (list of specific drug name mentioned which the patient/subject is currently consuming, including those continued from the past), {PATIENT_PAST_DRUGS} (list of names of drugs that the patient/subject used to consume in the past and is no longer consuming. It is mutually exclusive from {PRODUCTS}), {PARENT_DRUG_HISTORIES} (list of names of drugs consumed by parent), {EVENTS} (list of names of the individual adverse events to patient/subject, adverse event is a medical event experienced by patient which may or may not be due to product or drug consumption or medical device usage. consider over dosage, missed dosage or similar phrases as an adverse event. Do not consider event seriousness like hospitalization, death, disabling, etc as adverse event), {MEDICAL_HISTORIES} (list of names of individual medical history related to patient, medical history is a past adverse event or past medical issue or past pregnancy. It is mutually exclusive from {EVENTS}), {PARENT_MEDICAL_HISTORIES} (list of names of individual medical history related to parent), {DEATH_CAUSES} (list of names of individual death causes for the death of patient/subject), {LAB_TEST_NAMES} (list of names of specific individual lab test related to patient/subject). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. No not extract labels which are not asked. Only extract entities if they are explicitly mentioned in the text and refer to specific items or events. Do not extract general references or non-specific terms. Ensure sure the output JSON is a complete and valid. Provide the output JSON between $ signs as shown in the following example. ${ \"PRODUCTS\": <list of products>, \"EVENTS\": <list of events>, \"MEDICAL_HISTORIES\": <list of medical histories>, \"DEATH_CAUSES\": <list of death causes>, \"PARENT_MEDICAL_HISTORIES\": <list of parent medical histories>, \"PATIENT_PAST_DRUGS\": <list of patient past drugs>, \"PARENT_DRUG_HISTORIES\": <list of parent drug histories>, \"LAB_TEST_NAMES\": <list of lab test names> }$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "2": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. {PAT_AGE} (age of the patient with units), {PAT_GENDER} (patient's gender can be male or female), {PREGNANCY} (pregnancy status of the patient. true or false), {PAT_HEIGHT} (specific numeric value of height of the patient with units, do not consider descriptive data), {PAT_WEIGHT} (specific numeric value of weight of the patient with units, do not consider descriptive data), {PAT_AGE_GRP} (patient age group like infant, young, old, adult, adolescent, etc), {ETHNICITY} (ethnicity of the patient), {PAT_LMP} (last menstrual period of the patient), {PARENT_LMP_DATE} (last menstrual period of the parent), {PARENT_GENDER} (gender of the parent. prioritise mother if PARENT_LMP_DATE exists else any one parent), {REPORTER_OCCUPATION} (reporter's occupation/profession, e.g. physician, nurse, pharmacist, doctor, dentist, other healthcare professional, investigator, etc), {REPORTER_COUNTRY} (any country that is present in the text, it could be reporter's country or the country in which the case occured), {STUDY_NUM} (study number), {STUDY_TYPE} (type of study such as clinical research, clinical trial, report from research, spontaneous, literature, literature spontaneous, literature study, etc), {SOURCE_TYPE} (spontaneous or study), {HOSP_START_DATE} (hospitalization start date), {HOSP_END_DATE} (hospitalization end date). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example. ${\"ENTITIES\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "3": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. Currently extracted data is given as follows. {PRODUCTS} (list of all drugs consumed by patient/subject) = **PRODUCTS**. {PATIENT_PAST_DRUGS} (list of all drugs that a patient/subject used to consume in the past) = **PATIENT_PAST_DRUGS**. {PARENT_DRUG_HISTORIES} (list of all drugs or medications consumed by parent in the past) = **PARENT_DRUG_HISTORIES**. Extract entitites the following labels for each item in given {PRODUCTS} list. {PRODUCT_NAME} (name of the drug consumed by patient), {DRUG_ROLE} (role can be suspect or concomitant) , {DOSE_START_DATE} (start date of the dose), {DOSE_STOP_DATE} (end date of the dose), {DOSE} (strength of the dose with units), {FREQ} (dose frequency), {ROUTE} (route of administration for a medication), {FORMULATION} (drug formulation), {BATCH_LOT_NUM} (batch number or lot number of the dose), {DOSE_DURATION} (duration of the dose), {ACTION_TAKEN} (refers to the collected actions taken by the patient towards the drug such as start, stop, resume, switching, challenge, rechallenge, etc), {PRODUCT_INDICATIONS} (why the drug was taken). Extract entitites the following labels for each item in given {PATIENT_PAST_DRUGS} list. {PAT_PAST_DRUG} (name of past drug, exclusive from {PRODUCTS}) , {PAST_DRUG_START} (start date of the past drug consumed by the patient), {PAST_DRUG_STOP} (end date of the past drug consumed by the patient). Extract entitites the following labels for each item in given {PARENT_DRUG_HISTORIES} list. {PARENT_DRUG_HIST} (parent drug history name, exclusive of {PATIENT_PAST_DRUGS}). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example.${\"PRODUCTS\": [[\"PRODUCT_NAME\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each product and its related label], \"PATIENT_PAST_DRUGS\": [[\"PAT_PAST_DRUG\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each patient past drug and its related label], \"PARENT_DRUG_HISTORIES\": [[\"PARENT_DRUG_HIST\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each parent drug and its related label]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "4": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. Currently extracted data is given as follows. {LAB_TEST_NAMES} (list of lab test) = **LAB_TEST_NAMES**. Extract entitites the following labels for each item in given {LAB_TEST_NAMES} list. {TEST_NAME} (name of the test), {TEST_RESULT} (outcome/result of test conducted), {TEST_DATE} (test date). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example.${\"LAB_TEST_NAMES\": [[\"TEST_NAME\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each lab test and its related label]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "5": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. Currently extracted data is given as follows. {DEATH_CAUSES} (list of all mentioned death causes for the death of patient/subject) = **DEATH_CAUSES**. {EVENTS} (list of the adverse event where adverse event is any undesirable clinical event experienced by patient) = **EVENTS**. {MEDICAL_HISTORIES} (list of name of medical history related to patient) = **MEDICAL_HISTORIES**. {PARENT_MEDICAL_HISTORIES} (list of all drugs consumed by parent) = **PARENT_MEDICAL_HISTORIES**. Extract entitites the following labels for each item in given {EVENTS} list. {DESC_REPTD} (name of the adverse event experienced by patient which may or may not be due to product or drug consumption or medical device), {EVENT_OUTCOME} (outcome of the event such as recovered, not recovered, recovering, etc), {EVENT_SERIOUSNESS} (event seriousness from [hospitalization, fatal, life threatening, congenital anamoly, death, disabling, other medically important condition]), {EVENT_START_DATE} (start date of the event), {EVENT_END_DATE} (end date of the event), {EVENT_DURATION} (duration of the event). Extract entitites the following labels for each item in given {DEATH_CAUSES} list. {DEATH_CAUSE} (cause of death, exclusive of {EVENTS}), {DEATH_DATE} (date of death), {AUTOPSY_DONE} (was autopsy done, true or false), {AUTOPSY_RESULT} (if {AUTOPSY_DONE} is true, what was the determined cause of death by autopsy result). Extract entitites the following labels for each item in given {MEDICAL_HISTORIES} list. {MEDICAL_HISTORY} (name of medical history, exclusive of {EVENTS}), {MC_START_DATE} (start date of the medical history), {MC_END_DATE} (start date of the medical history). Extract entitites the following labels for each item in given {PARENT_MEDICAL_HISTORIES} list. {PARENT_MED_HIST} (parent medical history name, exclusive of {MEDICAL_HISTORIES}). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example.${\"DEATH_CAUSES\": [[\"DEATH_CAUSE\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each death cause and its related label], \"EVENTS\": [[\"DESC_REPTD\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], for each event], \"MEDICAL_HISTORIES\": [[\"MEDICAL_HISTORY\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each patient medical history and its related label], \"PARENT_MEDICAL_HISTORIES\": [[\"PARENT_MED_HIST\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each parent medical history and its related label]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only."
    },
    "with_conf_v3": {
    "1": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. {PRODUCTS} (list of specific drug name and medical device name mentioned which the patient/subject is currently consuming or using, including those continued from the past), {PATIENT_PAST_DRUGS} (list of names of drugs consumed and medical devices used by the patient/subject in the past and is no longer consuming or using. It is mutually exclusive from {PRODUCTS}), {PARENT_DRUG_HISTORIES} (list of names of drugs consumed and medical devices used by the parent), {EVENTS} (list of names of the individual adverse events to patient/subject, adverse event is a medical event experienced by patient which may or may not be due to product or drug consumption or medical device usage. Consider over dosage, missed dosage or incorrect dose administration by the patient as adverse event. hospitalization, death, disabling, etc are not adverse events), {MEDICAL_HISTORIES} (list of names of individual medical history or past adverse events or past medical issues or past pregnancies experienced by the patient. Consider alcoholic, smoker or similar phrases as a medical history. It is mutually exclusive from {EVENTS}), {PARENT_MEDICAL_HISTORIES} (list of names of individual medical history or adverse event or medical issue experienced by the parent. Consider pregnancy of parent in parental medical history), {DEATH_CAUSES} (list of names of individual death causes for the death of patient/subject), {LAB_TEST_NAMES} (list of names of specific individual lab test related to patient/subject). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Do not extract labels which are not asked. Only extract entities if they are explicitly mentioned in the text and refer to specific items or events. Do not extract general references or non-specific terms. Ensure sure the output JSON is a complete and valid. Provide the output JSON between $ signs as shown in the following example. ${ \"PRODUCTS\": <list of products>, \"EVENTS\": <list of events>, \"MEDICAL_HISTORIES\": <list of medical histories>, \"DEATH_CAUSES\": <list of death causes>, \"PARENT_MEDICAL_HISTORIES\": <list of parent medical histories>, \"PATIENT_PAST_DRUGS\": <list of patient past drugs>, \"PARENT_DRUG_HISTORIES\": <list of parent drug histories>, \"LAB_TEST_NAMES\": <list of lab test names> }$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "2": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. {PAT_AGE} (age of the patient with units), {PAT_GENDER} (patient's gender can be male or female), {PREGNANCY} (pregnancy status of the patient. true or false), {PAT_HEIGHT} (specific numeric value of height of the patient with units, do not consider descriptive data), {PAT_WEIGHT} (specific numeric value of weight of the patient with units, do not consider descriptive data), {PAT_AGE_GRP} (patient age group like foetus, neonate, infant, child, adolescent, adult, elderly, etc), {ETHNICITY} (ethnicity of the patient), {PAT_LMP} (last menstrual period of the patient), {PARENT_LMP_DATE} (last menstrual period of the parent), {PARENT_GENDER} (gender of the parent. prioritise mother if PARENT_LMP_DATE exists else any one parent), {REPORTER_OCCUPATION} (occupation of the reporter such as investigator, physician, pharmacist, consumer, patient as self, etc), {REPORTER_COUNTRY} (any country that is present in the text, it could be reporter's country or the country in which the case occured), {STUDY_NUM} (study number), {STUDY_TYPE} (type of study such as clinical research, clinical trial, report from research, spontaneous, literature, literature spontaneous, literature study, etc), {SOURCE_TYPE} (source type can be study or spontaneous), {HOSP_START_DATE} (hospitalization start date), {HOSP_END_DATE} (hospitalization end date or discharge date). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example. ${\"ENTITIES\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "3": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. Currently extracted data is given as follows. {PRODUCTS} (list of all drugs and medical devices currently being used by the patient/subject) = **PRODUCTS**. {PATIENT_PAST_DRUGS} (list of all drugs and medical devices that the patient/subject used in the past) = **PATIENT_PAST_DRUGS**. {PARENT_DRUG_HISTORIES} (list of all drugs and medical devices used by the parent in the past) = **PARENT_DRUG_HISTORIES**. Extract entities of the following labels for each item given in {PRODUCTS} list. {PRODUCT_NAME} (name of drug or medical device the patient is using), {DOSE} (strength of the drug dose with units), {DRUG_ROLE} (role can be suspect or concomitant. If concomitant is not mentioned then it is a suspect product) , {DOSE_START_DATE} (start date of the product consumption or usage), {DOSE_STOP_DATE} (stop date/end date of the product consumption or usage), {FREQ} (dose frequency), {ROUTE} (route of administration of the product), {FORMULATION} (drug formulation), {BATCH_LOT_NUM} (batch number or lot number of the dose), {DOSE_DURATION} (time period for which the product was consumed or used), {ACTION_TAKEN} (refers to the collected actions taken by the patient towards the product such as discontinued, dose reduced, dose increased,no change in dose, etc), {PRODUCT_INDICATIONS} (why the product was consumed or used). Extract entities of the following labels for each item given in {PATIENT_PAST_DRUGS} list. {PAT_PAST_DRUG} (name of past drugs consumed or past medical devices used by the patient exclusive from {PRODUCTS}) , {PAST_DRUG_START} (start date of the past product consumed or used by the patient), {PAST_DRUG_STOP} (end date of the past product consumed or used by the patient). Extract entities of the following labels for each item given in {PARENT_DRUG_HISTORIES} list. {PARENT_DRUG_HIST} (name of the drugs consumed or medical devices used by the parent, exclusive of {PATIENT_PAST_DRUGS}). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example.${\"PRODUCTS\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of product labels], \"PATIENT_PAST_DRUGS\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of patient past drug labels], \"PARENT_DRUG_HISTORIES\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of parent drug labels]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "4": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. Currently extracted data is given as follows. {LAB_TEST_NAMES} (list of lab test done by the patient) = **LAB_TEST_NAMES**. Extract entities of the following labels for each item given in {LAB_TEST_NAMES} list. {TEST_NAME} (name of the individual lab test), {TEST_RESULT} (outcome/result of the lab test conducted), {TEST_DATE} (lab test date). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example.${\"LAB_TEST_NAMES\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of lab test labels]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only.",
    "5": "Behave as an entity extraction model which is trained to extract entities from the medical domain related given text. The model will be given the text of any language as input to extract the entities and it has to return the extracted entities as presented in the input text. The output will be a JSON. The labels and their description is as follows where label is present between {} and its description is present between () each seperated by a comma. Currently extracted data is given as follows. {DEATH_CAUSES} (list of all causes of death mentioned in the patient or subject's death) = **DEATH_CAUSES**. {EVENTS} (list of the adverse event where adverse event is any undesirable clinical event experienced by patient) = **EVENTS**. {MEDICAL_HISTORIES} (list of medical history related to the patient) = **MEDICAL_HISTORIES**. {PARENT_MEDICAL_HISTORIES} (list of medical history related to parent) = **PARENT_MEDICAL_HISTORIES**. Extract entities of the following labels for each item given in {EVENTS} list. {DESC_REPTD} (name of the adverse event experienced by patient which may or may not be due to product or drug consumption or medical device usage), {EVENT_OUTCOME} (outcome of the adverse event such as recovered/resolved, recovering/resolving, not recovered/not resolved/ongoing, recovered/resolved with sequelae, fatal or similar phrases), {EVENT_SERIOUSNESS} (event seriousness from death, life threatening, hospitalization, intervention required, disabling, congenital anomaly, other medically important condition, etc), {EVENT_START_DATE} (start date of the adverse event), {EVENT_END_DATE} (end date/recovery date of the adverse event), {EVENT_DURATION} (duration of the adverse event). Extract entities of the following labels for each item given in {DEATH_CAUSES} list. {DEATH_CAUSE} (cause of death, exclusive of {EVENTS}), {DEATH_DATE} (date of death), {AUTOPSY_DONE} (was autopsy done, true or false), {AUTOPSY_RESULT} (if {AUTOPSY_DONE} is true, what was the determined cause of death by autopsy result). Extract entities of the following labels for each item given in {MEDICAL_HISTORIES} list. {MEDICAL_HISTORY} (name of medical history, exclusive of {EVENTS}), {MC_START_DATE} (start date of that medical history), {MC_END_DATE} (end date of that medical history). Extract entities of the following labels for each item given in {PARENT_MEDICAL_HISTORIES} list. {PARENT_MED_HIST} (parent medical history name, exclusive of {MEDICAL_HISTORIES}). Keep the extracted entities as concise as possible. Do not assume labels which are not mentioned. Only extract entities if they are explicitly mentioned in the text. Do not extract general references or non-specific terms. Convert true and false to boolean type instead of string. Give a score signifying how confident you are about each extracted entity on a scale of 0-1, add the confidence score for each entity in the below json for each extracted entity. Also, give context window of 2-3 words around the extracted entity such that it strictly contains the exact entity text and it contains some context which describes the label for that entity.  If entity value does not exists in text use \"null\" as entity value and \"null\" as context window. Ensure that the output JSON is a complete and valid. Provide output in json format between $ signs as shown in the following example.${\"DEATH_CAUSES\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of death cause labels], \"EVENTS\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], for each event labels], \"<label>\": [[\"MEDICAL_HISTORY\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of patient medical history labels], \"PARENT_MEDICAL_HISTORIES\": [[\"<label>\", \"<entity_value>\", \"<context window of the extracted entity>\",\"<confidence score>\"], ... for each extracted entity of parent medical history labels]}$. Following is the text input provided between `` signs. ``<narrative>``. Return the output JSON between $ signs only."
  },
    "case_category_prompt_v1": "Behave as a doctor and classify the text provided between $ signs into one of the following categories:\n        1. AE : A report having Adverse Event, (adverse events of patient/subject, adverse event is a medical event experienced by patient which may or may not be due to product consumption eg, fever or missed dose).\n        2. PQC : A report having product quality complaint, (product quality complaints include a medical device not working or the quality of a medicine was not correct which might have led to missing a dose).\n        3. MI : A report having Medical Inquiry. A medical inquiry typically refers to a formal request or investigation conducted by consumers, healthcare professionals or institutions to gather information related to the medicine.\n        4. AE-MI : A report having both AE and MI in the report.\n        5. PQC-AE : A report having both AE and PQC in the report.\n        6. OTHER_MEDICAL : If input text is related to medical domain or can make a part of patient medical narrative and not advertising in nature .\n        7. SPAM : If input text is advertising in nature or is unrelated to medical domain or any gibrish.\n    \n        \n        Give a score signifying how confident you are about each extracted entity on a scale of 0-1 , score should be in decimal with upto 2 decimal points.  \n        \n        $<narrative>$\n        \n    Provide output in json format as {\"categories\": \"\", \"categories_acc\":\"\"}"
  },
  
  "templates": "with_conf_v3",
  "template_case_classification" : "case_category_prompt_v1",
  "translation_mapping": {
    "autopsy": "autopsy",
    "pregnancy": "pregnancy",
    "testAssessment": {
      "positive": "positive",
      "negative": "negative",
      "inconclusive": "inconclusive",
      "boderline": "boderline"
    },
    "months": {
      "jan": "jan",
      "feb": "feb",
      "mar": "mar",
      "apr": "apr",
      "may": "may",
      "jun": "jun",
      "jul": "jul",
      "aug": "aug",
      "sep": "sep",
      "oct": "oct",
      "nov": "nov",
      "dec": "dec"
    },
    "product role": {
      "suspect": "suspect"
    }
  },
  "openai": {
    "switch": false
  }
}